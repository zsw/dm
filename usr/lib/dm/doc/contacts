Contacts
========

The dev mod system has an interface to Google contacts.


Overview
--------

The interface to Google contacts permits creating and updating
Google contacts entries. It's also possible to display all contacts and
use the interface in mutt.

The scripts act as an interface to Google contacts but there is nothing
magical going on. You can access the contacts and edit/modify/display
them from Google's normal web page interface at www.gmail.com.

Setup
-----

Python scripts require the python Google Contacts Data API. With
archlinux this can be installed as follows:

$ pacman -S python-gdata

In order for scripts to interface with the Google contacts API, the
scripts need a google login email address and password. These can be
setup in the $HOME/.dm/email_accounts configuration file.

## Example email_accounts configuration file.
$ cat $HOME/.dm/email_accounts
    [accounts]
    #username: password
    jimkarsten@gmail.com: myPa55word
    iiijjjiii@gmail.com: myPa55word

    [google]
    #api: email_address
    contacts: jimkarsten@gmail.com
    calendar: jimkarsten@gmail.com

The [accounts] section prescribes the login information, the username
(google email address) and password. The [google] section prescribes
which google account to use for a specific service. In the example above
the jimkarsten@gmail.com account is used for both the contacts and
calendar api.

As a precaution, you may wish to lock down access to the configuration
file since it contains passwords.

$ chmod 600 $HOME/.dm/email_accounts


Displaying your contacts
------------------------

The contacts.py script is use for displaying contacts.

The script has two modes, short and long (default). The short version
displays one line per contact. The long version displays one field per
line.

$ contacts.py -m short

    abcdef@example.com     Smith, Jones     home
    iamnotaflea@gmail.com  Flea, Ima        work

$ contacts.py -m long
$ contacts.py

    id: 174d80c0f519de7
    name: Smith, Jones
    organization: My Company Ltd
    email_work: abcdef@example.com
    phone_work: 555 222-2121

    id: 6906ed3e8eb6e03f
    name: Flea, Ima
    email_home: iamnotaflea@gmail.com
    phone_home: 999 888-7777 ext 123

If a keyword is provided as an argument, the script will print only
contacts that match on that keyword. Matching is case-insensitive.

$ contacts.py -m short smith

    abcdef@example.com     Smith, Jones     555 222-2121

The script has options to include a status header line (mutt uses
this), and control the sort order.

## Display a status header line
$ contacts.py -m short -r smith

    Searching gmail 37 entries      1 matches:
    abcdef@example.com     Smith, Jones     555 222-2121

## Get help to see other options
$ contacts.py -h


Updating a contact
------------------

To update a contact, run contacts_edit.sh.

$ contacts_edit.sh

The script will open a vim session and allow you to edit all contacts
entries. Make changes with vim, save your changes, and the contacts
entries will be uploaded to Google contacts.

The general format of the edited file should be left as is. You can edit
the values but do not change the headers. Also do *not* change the id
values. They represent the ids of the contacts entries as stored in the
Google system.

## Get help
$ contacts_edit.sh -h

To add more info to the contact, for example, an email address or phone
number, simply add a new line indicating the contact information. See
the "Email and Phone Number" section below for the syntax.

To remove an element of the contaction info, simply delete the line from
the contact info.

For example, a contact may look as follows.

    id: 174d80c0f519de7
    name: Smith, Jones
    organization: My Company Ltd
    email_work: abcdef@example.com
    phone_work: 555 222-2121

To remove the organization, and add a home phone number, edit it as
below and then save.

    id: 174d80c0f519de7
    name: Smith, Jones
    email_work: abcdef@example.com
    phone_home: 555 222-3232
    phone_work: 555 222-2121

The order of the elements is irrelevant.

Any contacts entries not in the edit session remain untouched. You can
update existing contacts, add contacts and delete contacts within the
same contacts_edit.sh session. See below for the add and delete syntax.


WARNING: A blank line is used to separate contact entries in an edit
session. Do not put blank lines within the fields of a particular
contact entry as text after a blank line will be dropped.


Adding a contact
----------------

To add a contact, run contacts_edit.sh and append the info for the new
contact. The "id" field should be omitted. For example below, a contact
entry for "Hamilton, Valerie" will be added when the text is saved.

$ contacts_edit.sh -h

    id: 174d80c0f519de7
    name: Smith, Jones
    organization: My Company Ltd
    email_work: abcdef@example.com
    phone_work: 555 222-2121

    id: 6906ed3e8eb6e03f
    name: Flea, Ima
    email_home: iamnotaflea@gmail.com
    phone_home: 999 888-7777 ext 123

    name: Hamilton, Valerie
    email_home: vhamilton@gmail.com
    phone_home: 555 666-4444

You can add multiple contacts at one time.


Deleting a contact
------------------

To delete a contacts entry, simply change the "name:" field to DELETE.

For example, consider this contacts entry.

    id: 174d80c0f519de7
    name: Smith, Jones
    organization: My Company Ltd
    email_work: abcdef@example.com
    phone_work: 555 222-2121

The same contacts entry has been modified below and is now flagged to be deleted.

    id: 174d80c0f519de7
    name: DELETE
    organization: My Company Ltd
    email_work: abcdef@example.com
    phone_work: 555 222-2121

NOTES:

* See "Updating a contacts entry" for instructions on how to change a
  contacts entry.
* The keyword DELETE must be one word, uppercase.
* The id of the contacts entry must remain unchanged in order for the
  system to be able identify the specific contacts entry to delete.


Email and Phone Numbers
-----------------------

Google permits each contact to have multiple email and phone numbers if
desired. Email addresses and phone numbers are distinguished by a type
field. Any number of any of the accepted types (see lists below) are
permitted.

In the following example, the contact has a home email address, two work
emails addresses, a home phone and a cell (mobile) phone number.

    id: 4d80c0f519de7i17
    name: Mania, Lorne
    organization: Insane Contacts Corp.
    email_home: lorne@example.com
    email_work: sales@insanecontacts.com
    email_work: lmania@insanecontacts.com
    phone_home: 555 222-2222
    phone_mobile: 555 333-3333

An email address is indicated by one of the following field names:

    email_home
    email_other
    email_work

A phone number is indicated by any of these fields:

    phone_home
    phone_home_fax
    phone_mobile
    phone_other
    phone_pager
    phone_work
    phone_work_fax


Mutt Interface
--------------

The contacts list can be used as an address book for mutt.

Configure the query_command variable as follows:

$ grep query_command ~/.mutt/muttrc

    set query_command = "/root/dm/bin/contacts.py -m short -s name -r %s"

The -r option should be used to display the status header line.
Otherwise mutt will mistaken the first contact as the header line and
not display it in the list of contacts.


The following illustrates how to create a macro to add contacts within
mutt. The macro will add the senders address (the "From" header value)
of the current email to the google contacts. The macro is bound to the
'a' key but that can be changed to whatever you like.

## Replace abook add contact macro
$ cat ~/.mutt/bindings

    # add "From" sender to google contacts
    macro index,pager a '\
    <enter-command>set my_wait_key=$wait_key<enter>\
    <enter-command>set wait_key<enter>\
    <pipe-message>/root/dm/bin/email_to_google_contact.sh<return>\
    <enter-command>set wait_key=$my_wait_key<enter>'


# vim: ft=our_doc
